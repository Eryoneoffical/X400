
[idle_timeout]
timeout: 120
gcode:
      {% if printer.pause_resume.is_paused == True  %}   
           M104 S0
      {% else %}    
          M104 S0
          M84
          SET_PIN PIN=Board_FAN VALUE=0.0
      {% endif %}

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
description: Pause the current print
gcode:
    { action_respond_info("pause macro %f" % printer[printer.toolhead.extruder].target) }
    { action_respond_info("pused? %d" % printer.pause_resume.is_paused) }
     {% if printer.pause_resume.is_paused == False %}    
         SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=saved_extruder_temp  VALUE={printer[printer.toolhead.extruder].target}
     {% endif %}    
    BASE_PAUSE
    {% if 'xy' in printer.toolhead.homed_axes %}
       G1 Y50 X399
    {% endif %}
    
    #_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description: Resume the current print
rename_existing: RESUME_BASE
variable_saved_extruder_temp: 0
gcode:
   { action_respond_info("action:resumed") }
   M104 S{saved_extruder_temp}
   M109 S{saved_extruder_temp}
   #{% if printer[printer.toolhead.extruder].temperature + 3 < saved_extruder_temp %}
   #   { action_respond_info("action:resumed1") }
   #   M109 S{saved_extruder_temp}
   #{% endif %}
   {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
   {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
   {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
   {% set sp_move        = velocity if not macro_found else client.speed_move|default(velocity) %}
   _CLIENT_EXTRUDE
   _CLIENT_EXTRUDE
   _CLIENT_EXTRUDE
   _CLIENT_EXTRUDE
   _CLIENT_EXTRUDE
   _CLIENT_EXTRUDE
   _CLIENT_EXTRUDE

   
   RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
   _CLIENT_EXTRUDE
   _CLIENT_EXTRUDE
   






    
[gcode_macro M155]
description: Mimics Marlin code to output temp's on a 'S'chedule.
variable_repeat_timer: 0
gcode:
  {% if 'S' in params %}
  {% set seconds = params.S|int %}
    #RESPOND MSG="time in seconds:"{seconds}
    SET_GCODE_VARIABLE MACRO=M155 VARIABLE=repeat_timer VALUE={seconds}
    UPDATE_DELAYED_GCODE ID=respond_temp_timer DURATION={seconds}
  {% endif %}
  
[delayed_gcode respond_temp_timer]
initial_duration: 0
gcode:
#    {% set time = params.VALUE|int %}
#    RESPOND MSG="time2 in seconds:"{params.REPEAT}%
    SET_PIN PIN=LED VALUE=0.0
    G4 P100
    SET_PIN PIN=LED VALUE=1
    G4 P100
    UPDATE_DELAYED_GCODE ID=respond_temp_timer DURATION={printer['gcode_macro M155'].repeat_timer}

#[exclude_object]

[filament_switch_sensor runout]
##   When set to True, a PAUSE will execute immediately after a runout
##   is detected. Note that if pause_on_runout is False and the
##   runout_gcode is omitted then runout detection is disabled. Default
##   is True.
pause_on_runout:   True
runout_gcode:
  M600
  G4 P2000
  #SET_IDLE_TIMEOUT TIMEOUT=864000 ; one day in seconds
  {action_respond_info("RUNOUT: Filament runout")}

  {% if 'xy' in printer.toolhead.homed_axes %}
       G1 Y50 X399
  {% endif %}
   
  ;UNLOAD_FILAMENT
  
  ; FILAMENT CHANGE
  ; PRINT CONTINUE
insert_gcode: 
    {action_respond_info("RUNOUT: Filament inserted")}
    LOAD_FILAMENT

##   The minimum amount of time in seconds to delay between events.
##   Events triggered during this time period will be silently
##   ignored. The default is 3 seconds.
##event_delay: 3.0
##   The amount of time to delay, in seconds, between the pause command
##   dispatch and execution of the runout_gcode. It may be useful to
##   increase this delay if OctoPrint exhibits strange pause behavior.
##   Default is 0.5 seconds.
##pause_delay: 0.5
##    XYE mcu E0DET
switch_pin:!EECAN:gpio18

[filament_switch_sensor tangle]
##   When set to True, a PAUSE will execute immediately after a runout
##   is detected. Note that if pause_on_runout is False and the
##   runout_gcode is omitted then runout detection is disabled. Default
##   is True.
pause_on_runout:   True
runout_gcode:
  M600
  G4 P2000
  #SET_IDLE_TIMEOUT TIMEOUT=864000 ; one day in seconds
  {action_respond_info("Filament tangled")}

  ;G1 Y50 X399  F3600 
  ;UNLOAD_FILAMENT
  
  ; FILAMENT CHANGE
  ; PRINT CONTINUE
insert_gcode: 
    ;{action_respond_info("tangled: Filament inserted")}
    ;LOAD_FILAMENT

##   The minimum amount of time in seconds to delay between events.
##   Events triggered during this time period will be silently
##   ignored. The default is 3 seconds.
##event_delay: 3.0
##   The amount of time to delay, in seconds, between the pause command
##   dispatch and execution of the runout_gcode. It may be useful to
##   increase this delay if OctoPrint exhibits strange pause behavior.
##   Default is 0.5 seconds.
##pause_delay: 0.5
##    XYE mcu E0DET
switch_pin:PB15

#[filament_motion_sensor runout]
#   The minimum length of filament pulled through the sensor to trigger
#   a state change on the switch_pin
#   Default is 7 mm.
#detection_length: 14.0
#extruder: extruder
#pause_on_runout: FALSE
#runout_gcode:
#  {action_respond_info("RUNOUT: Filament runout")}
#  PAUSE
#insert_gcode: {action_respond_info("RUNOUT: Filament inserted")}
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#event_delay: 3.0
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
#pause_delay: 0.5
##    XYE mcu E0DET
#switch_pin: ^!MKS_THR:gpio20

#[filament_switch_sensor toolhead_runout]
##   When set to True, a PAUSE will execute immediately after a runout
##   is detected. Note that if pause_on_runout is False and the
##   runout_gcode is omitted then runout detection is disabled. Default
##   is True.
#pause_on_runout: FALSE
#runout_gcode: {action_respond_info("RUNOUT: Toolhead Filament runout")}
#  PAUSE
#insert_gcode: {action_respond_info("RUNOUT: Toolhead Filament inserted")}
##   The minimum amount of time in seconds to delay between events.
##   Events triggered during this time period will be silently
##   ignored. The default is 3 seconds.
##event_delay: 3.0
##   The amount of time to delay, in seconds, between the pause command
##   dispatch and execution of the runout_gcode. It may be useful to
##   increase this delay if OctoPrint exhibits strange pause behavior.
##   Default is 0.5 seconds.
##pause_delay: 0.5
##    XYE mcu E1DET
#switch_pin: ^!P1.25

#####################################################################
# 	Macro
#####################################################################
[gcode_macro SET_FILAMENT_SENSOR]
description: Sets the filament sensor on/off and save value to file
rename_existing: SET_FILAMENT_SENSOR_BASE
gcode:
  {% if printer.save_variables.variables.filament_sensor is not defined %}
    {% set filament_sensor = {params.SENSOR|string: params.ENABLE|int} %}
  {% else %}
    {% set filament_sensor = printer.save_variables.variables.filament_sensor %}
    {% set _dummy = filament_sensor.update({params.SENSOR|string: params.ENABLE|int}) %}
  {% endif %}
  SET_FILAMENT_SENSOR_BASE SENSOR={params.SENSOR} ENABLE={params.ENABLE}
  SAVE_VARIABLE VARIABLE=filament_sensor VALUE="{filament_sensor}"

[gcode_macro _RESTORE_FILAMENT_SENSOR]
description: Restore the filament sensor on/off state at klipper start
gcode:
  {% if printer.save_variables.variables.filament_sensor is defined %}
    {% for sensor in printer.save_variables.variables.filament_sensor %}
       SET_FILAMENT_SENSOR_BASE SENSOR={sensor} ENABLE={printer.save_variables.variables.filament_sensor[sensor]}
    {% endfor %}
  {% endif %}
  
[gcode_macro M600]
description: Filament change
gcode:
   { action_respond_info("M600") }
   PAUSE     ; everything needed is defined there

[gcode_macro UNLOAD_FILAMENT]
description:Unload Filament
gcode:   
  { action_respond_info("Unload Filament   printing %d" % ( params.SPEED|default(0)|int )) }
    {% if printer.pause_resume.is_paused == False and params.SPEED|default(0)|int == 0 %}     
      { action_respond_info("pausing") }
      M600
      G4 P1000
      ;SET_IDLE_TIMEOUT TIMEOUT=864000 ; one day in seconds
    {% endif %}  

   {% if printer[printer.toolhead.extruder].target < 250 or printer[printer.toolhead.extruder].temperature + 3 < printer[printer.toolhead.extruder].target  %}
        M104 S250
        M109 S250
   {% endif %}   

    {% if 'xy' not in printer.toolhead.homed_axes or printer.toolhead.position.x==395  %}
        M117 Homing...
        G28 X Y
        { action_respond_info("z%f " %  printer.toolhead.position.z) }
        {% if 'z' not in printer.toolhead.homed_axes %}
            SET_KINEMATIC_POSITION Z={ printer.toolhead.position.z }
        {% endif %}
    {% endif %}
    
    G90
    G1 Y50 X399  F3600                                                     ; move toolhead to reachable position and ...
    SAVE_GCODE_STATE NAME=unload_state
    G91
    M83                   # Put the extruder into relative mode
    G92 E0.0            
    G0 E-5 F2000                                                              ; extract a bit
    G0 E5 F300
    G0 E-30 F3000                                                             ; forming filament Tip for Rapido -> from ERCF V3 ercf_software.cfg
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-2 F300
    G0 E2 F300
    G0 E-40 F1800                                                             ; aaand puke it out fast                                                          ; aaand puke it out fast
    G92 E0.0              # Reset the extruder again
    M82                   # Put the extruder back into absolute mode.
    G90
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
description:Load Filament
gcode:  

    
    { action_respond_info("load Filament   printing %d" % ( params.SPEED|default(0)|int )) }
    {% if printer.pause_resume.is_paused == False and params.SPEED|default(0)|int == 0 %}     
      { action_respond_info("pausing") }
      M600
      G4 P1000
      ;SET_IDLE_TIMEOUT TIMEOUT=864000 ; one day in seconds
    {% endif %} 

    {% if printer[printer.toolhead.extruder].target < 250 or printer[printer.toolhead.extruder].temperature + 3 < printer[printer.toolhead.extruder].target  %}

        M104 S250
        M109 S250
    {% endif %}   
 
    {% if 'xy' not in printer.toolhead.homed_axes or printer.toolhead.position.x==395 %}
        M117 Homing...
        G28 X Y
        { action_respond_info("z%f " %  printer.toolhead.position.z) }
        {% if 'z' not in printer.toolhead.homed_axes %}
            SET_KINEMATIC_POSITION Z={ printer.toolhead.position.z }
        {% endif %}
    {% endif %}

    G90
    G1 Y50 X399  F3600                                                     ; move toolhead to reachable position and ...
    SAVE_GCODE_STATE NAME=load_state
    G91
    M83                   # Put the extruder into relative mode
    G92 E0.0            
    G1 E80 F300                                                              ; extract 200mm for colour change
    G92 E0.0              # Reset the extruder again
    M82                   # Put the extruder back into absolute mode.
    G90
    RESTORE_GCODE_STATE NAME=load_state
 

      
      
